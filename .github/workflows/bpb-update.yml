# .github/workflows/bpb-update.yml (The Final, Direct API Version)

name: Deploy BPB Worker to Cloudflare

on:
  schedule:
    - cron: '0 22 * * *'
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    name: Deploy
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download latest worker.js
        run: |
          LATEST_RELEASE_URL=$(curl -s "https://api.github.com/repos/bia-pain-bache/BPB-Worker-Panel/releases" | jq -r '.[0].assets[] | select(.name == "worker.js") | .browser_download_url')
          curl -L -o worker.js "$LATEST_RELEASE_URL"

      # --- 這是新增的、最關鍵的步驟 ---
      - name: Create Metadata File
        run: |
          # 我們在這裡動態地建立一個 metadata.json 檔案。
          # 這個檔案包含了 Cloudflare API 需要的、關於您 Worker 的所有繫結資訊。
          echo '{
            "main_module": "worker.js",
            "bindings": [
              {
                "type": "kv_namespace",
                "name": "kv",
                "namespace_id": "${{ secrets.KV_NAMESPACE_ID }}"
              },
              {
                "type": "secret_text",
                "name": "UUID",
                "text": "${{ secrets.SECRET_FOR_UUID }}"
              },
              {
                "type": "secret_text",
                "name": "TR_PASS",
                "text": "${{ secrets.SECRET_FOR_TR_PASS }}"
              }
            ]
          }' > metadata.json
          
          echo "--- Generated metadata.json ---"
          cat metadata.json

      # --- 使用 curl 直接、完整地部署所有內容 ---
      - name: Deploy Worker via Cloudflare API
        run: |
          # 這個 curl 指令使用 multipart/form-data 格式，
          # 將元數據 (metadata.json) 和您的原始混淆代碼 (worker.js)
          # 在同一個請求中，原封不動地發送給 Cloudflare。
          # 這將確保您的所有設定都被完整地、原子化地更新。
          curl --fail -X PUT "https://api.cloudflare.com/client/v4/accounts/${{ secrets.CF_ACCOUNT_ID }}/workers/scripts/dry-block-0743" \
            -H "Authorization: Bearer ${{ secrets.CF_API_TOKEN }}" \
            -F "metadata=@metadata.json;type=application/json" \
            -F "script=@worker.js;type=application/javascript+module"
