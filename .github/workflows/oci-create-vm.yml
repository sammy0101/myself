name: '[Manual] Create OCI VM'

on:
  # 移除了 push: 触发器，只保留 workflow_dispatch
  workflow_dispatch:
    # 可选：定义输入参数，让手动触发时可以动态配置
    inputs:
      vm-name:
        description: 'Name of the VM instance'
        required: true
        default: 'github-actions-vm'
        type: string
      vm-shape:
        description: 'Compute shape (e.g., VM.Standard.E2.1.Micro)'
        required: true
        default: 'VM.Standard.E2.1.Micro'
        type: string

jobs:
  create-vm:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup OCI CLI
        uses: oracle-actions/setup-oci-cli@v1

      - name: Create VM Instance
        env:
          OCI_TENANCY: ${{ secrets.OCI_TENANCY }}
          OCI_USER_ID: ${{ secrets.OCI_USER_ID }}
          OCI_REGION: ${{ secrets.OCI_REGION }}
          OCI_API_KEY: ${{ secrets.OCI_API_KEY }}
          OCI_FINGERPRINT: ${{ secrets.OCI_FINGERPRINT }}
          OCI_COMPARTMENT_ID: ${{ secrets.OCI_COMPARTMENT_ID }}
          OCI_SUBNET_ID: ${{ secrets.OCI_SUBNET_ID }}
        run: |
          # 使用 workflow_dispatch 的输入参数
          oci compute instance launch \
            --compartment-id $OCI_COMPARTMENT_ID \
            --availability-domain "Pllz:PHX-AD-1" \  # 请替换为你的可用性域（Availability Domain）
            --display-name "${{ github.event.inputs.vm-name }}" \
            --shape "${{ github.event.inputs.vm-shape }}" \
            --image-id "ocid1.image.oc1.ap-osaka-1.aaaaaaaaglaxxdyc7fwf77e4lq26h2nhik52d2bmxjuiqe5mzndw3zpmj4hq" \  # 请替换为你的镜像 OCID（例如 Oracle Linux 的 OCID）
            --subnet-id $OCI_SUBNET_ID \
            --assign-public-ip true \
            --ssh-authorized-keys-file ./public-key.txt  # 确保你的公钥文件在此路径

      - name: Get VM Public IP
        id: get-ip
        env:
          OCI_COMPARTMENT_ID: ${{ secrets.OCI_COMPARTMENT_ID }}
        run: |
          # 稍等一会儿，让VM获取IP地址
          sleep 15
          # 查询实例的公网IP，并设置为输出变量
          PUBLIC_IP=$(oci compute instance list \
            --compartment-id $OCI_COMPARTMENT_ID \
            --display-name "${{ github.event.inputs.vm-name }}" \
            --lifecycle-state RUNNING \
            --query 'data[0]."public-ip"' \
            --raw-output)
          echo "public_ip=$PUBLIC_IP" >> $GITHUB_OUTPUT
          echo "VM Public IP: $PUBLIC_IP"

      - name: Print Connection Info
        run: |
          echo "🎉 VM instance '${{ github.event.inputs.vm-name }}' has been created successfully!"
          echo "🌐 You can connect to it using: ssh opc@${{ steps.get-ip.outputs.public_ip }}"
          # 假设你使用的是 Oracle Linux 或 CentOS，默认用户是 'opc'
          # 如果是 Ubuntu，默认用户是 'ubuntu'
