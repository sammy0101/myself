name: Deploy to OCI

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      OCI_CLI_USER: ${{ secrets.USER_OCID }}
      OCI_CLI_TENANCY: ${{ secrets.TENANCY_OCID }}
      OCI_CLI_FINGERPRINT: ${{ secrets.FINGERPRINT }}
      OCI_CLI_REGION: ${{ vars.REGION }}  # 在 repo Settings > Variables 中設定你的 region，如 us-ashburn-1
      OCI_CLI_KEY_FILE: private_key.pem
    steps:
    - uses: actions/checkout@v3

    - name: Install OCI CLI
      run: |
        curl -L -O https://raw.githubusercontent.com/oracle/oci-cli/master/scripts/install/install.py
        python3 install.py --accept-all-defaults
        export PATH=$HOME/bin:$PATH
        oci --version

    - name: Setup OCI CLI Config
      run: |
        echo "${{ secrets.PRIVATE_KEY }}" > ${{ env.OCI_CLI_KEY_FILE }}
        chmod 600 ${{ env.OCI_CLI_KEY_FILE }}

    - name: Get Image OCID
      id: get-image
      run: |
        IMAGE_ID=$(oci compute image list --compartment-id ${{ secrets.COMPARTMENT_ID }} --operating-system "Canonical Ubuntu" --operating-system-version "24.04" --shape "VM.Standard.A1.Flex" --query "data[? \"display-name\" == 'Canonical-Ubuntu-24.04-aarch64-2025.07.23-0'].id | [0]" --raw-output)
        if [ -z "$IMAGE_ID" ]; then
          echo "Error: Image not found for build 2025.07.23-0"
          exit 1
        fi
        echo "image_id=$IMAGE_ID" >> $GITHUB_OUTPUT

    - uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: 1.5.0  # 調整為最新

    - name: Terraform Init
      run: terraform init

    - name: Terraform Plan
      run: |
        terraform plan \
          -var "tenancy_ocid=${{ secrets.TENANCY_OCID }}" \
          -var "user_ocid=${{ secrets.USER_OCID }}" \
          -var "fingerprint=${{ secrets.FINGERPRINT }}" \
          -var "private_key_path=${{ env.OCI_CLI_KEY_FILE }}" \
          -var "region=${{ vars.REGION }}" \
          -var "compartment_id=${{ secrets.COMPARTMENT_ID }}" \
          -var "subnet_id=${{ secrets.SUBNET_ID }}" \
          -var "image_id=${{ steps.get-image.outputs.image_id }}" \
          -var "ssh_public_key=${{ secrets.SSH_PUBLIC_KEY }}"  # 可選 secret

    - name: Terraform Apply
      if: github.ref == 'refs/heads/main'
      run: |
        terraform apply -auto-approve \
          -var "tenancy_ocid=${{ secrets.TENANCY_OCID }}" \
          -var "user_ocid=${{ secrets.USER_OCID }}" \
          -var "fingerprint=${{ secrets.FINGERPRINT }}" \
          -var "private_key_path=${{ env.OCI_CLI_KEY_FILE }}" \
          -var "region=${{ vars.REGION }}" \
          -var "compartment_id=${{ secrets.COMPARTMENT_ID }}" \
          -var "subnet_id=${{ secrets.SUBNET_ID }}" \
          -var "image_id=${{ steps.get-image.outputs.image_id }}" \
          -var "ssh_public_key=${{ secrets.SSH_PUBLIC_KEY }}"

    - name: Output Results
      run: |
        echo "Instance Public IP: $(terraform output -raw instance_public_ip)"
        echo "SSH Password: $(terraform output -raw ssh_password)"  # 這會在 log 中顯示密碼，請小心
